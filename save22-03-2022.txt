LIST P = PIC18F4321 F = INHX32
    #include <p18f4321.inc>
    CONFIG OSC = INTIO2
    CONFIG PBADEN = DIG
    CONFIG WDT = OFF
    
    readH EQU 0x01
    readL EQU 0x02
 
    position EQU 0x03
    returnFlag EQU 0x04
 
    timeNoteL EQU 0x05
    timeNoteH EQU 0x06
 
    ORG 0x0000
    GOTO MAIN
    ORG 0x0008
    RETFIE FAST
    ORG 0x0018
    RETFIE FAST
    
    INIT_EUSART
	
	MOVLW b'00000100' ; SYNCH -0 BRGH - 1 
	MOVWF TXSTA,0
	MOVLW b'10010001'   ; RX9 - 0
	MOVWF RCSTA,0
	MOVLW b'01001000' ; BRG16 - 1
	MOVWF BAUDCON,0
	MOVLW .25       ; baud rate of 9600
	MOVWF SPBRG,0
	;MOVLW b'00000000'
	;MOVWF SPBRGH,0
	CLRF SPBRGH,0
	RETURN
    
    INIT_OSC
	MOVLW b'01000010'    ; 1MHz 1us
	MOVWF   OSCCON,0 
	RETURN
	
    INIT_TMR0
	MOVLW b'10011000' ; 16 bit timer - no prescaler 
	MOVWF T0CON,0
	RETURN
    INIT_PORTS
	MOVLW b'00000011'
	MOVWF ADCON0,0
	MOVLW b'00001110'
	MOVWF ADCON1,0
	MOVLW b'10001001'
	MOVWF ADCON2,0
	BSF TRISA,0,0
	CLRF TRISC,0
	BSF TRISC,6,0
	BSF TRISC,7,0
	CLRF TRISD,0
	RETURN

    READ_VALUE
	MOVFF ADRESH,readH
	MOVFF ADRESL,readL
	RETURN
	
	
    SET_NOTE_C
	SETF LATD,0
	MOVLW HIGH(.125)
	MOVWF timeNoteH,0
	MOVLW LOW(.125)
	MOVWF timeNoteL,0
	RETURN
	
    SET_NOTE_D
	MOVLW HIGH(.175)
	MOVWF timeNoteH,0
	MOVLW LOW(.175)
	MOVWF timeNoteL,0
	RETURN
    SET_NOTE_E
	MOVLW HIGH(.225)
	MOVWF timeNoteH,0
	MOVLW LOW(.225)
	MOVWF timeNoteL,0
	RETURN
	
    SET_NOTE_F
	MOVLW HIGH(.275)
	MOVWF timeNoteH,0
	MOVLW LOW(.275)
	MOVWF timeNoteL,0
	RETURN
    SET_NOTE_G
	MOVLW HIGH(.325)
	MOVWF timeNoteH,0
	MOVLW LOW(.325)
	MOVWF timeNoteL,0
	RETURN
    SET_NOTE_A
	MOVLW HIGH(.375)
	MOVWF timeNoteH,0
	MOVLW LOW(.375)
	MOVWF timeNoteL,0
	RETURN
    SET_NOTE_B
	MOVLW HIGH(.425)
	MOVWF timeNoteH,0
	MOVLW LOW(.425)
	MOVWF timeNoteL,0
	RETURN
	
    SET_NOTE_C2
	MOVLW HIGH(.475)
	MOVWF timeNoteH,0
	MOVLW LOW(.475)
	MOVWF timeNoteL,0
	RETURN
	
    High_PWM
	;MOVFF TMR0L,LATD
	MOVFF TMR0L,readL
	MOVFF TMR0H,readH
	MOVFF timeNoteH, WREG
	CPFSEQ readH,0
	GOTO High_PWM
	MOVFF timeNoteL, WREG
	CPFSGT readL,0
	GOTO High_PWM
	RETURN	
    MOVE_SERVO_X
	BCF INTCON, GIE ;disable interrupts
	
	CLRF TMR0H,0
	CLRF TMR0L,0
	BSF LATC,0,0
	CALL High_PWM
	
	TIME_AT_LOW_X
	BCF LATC,0,0
	MOVFF TMR0L,readL
	MOVFF TMR0H,readH
	MOVLW HIGH(.5000)
	CPFSGT readH,0
	GOTO TIME_AT_LOW_X
	MOVLW LOW(.5000)
	CPFSGT readL,0
	GOTO TIME_AT_LOW_X
	
	BSF INTCON, GIE ; re-enable interrupts
	RETURN
	
    CHECK_LEFT
	
	; checking if < 100
	MOVLW .1
	CPFSLT readH,0
	RETURN
	MOVLW LOW(.100)
	CPFSLT readL,0
	RETURN
	; threshold for centre is left < 100
	
	MOVLW .0
	SUBWF position,0
	BTFSS STATUS,Z,0
	DECF position,1
	
	SETF returnFlag
	RETURN
	
    CHECK_RIGHT
	;checking if > 900
	MOVLW .2
	CPFSGT readH,0
	RETURN
	MOVLW LOW(.900)
	CPFSGT readL,0
	RETURN
	
	; threshold for centre is 900 < right
	
	MOVLW .7
	SUBWF position,0
	BTFSS STATUS,Z,0
	INCF position,1
	SETF returnFlag
	
	RETURN
	
    CHECK_CENTRE
	;checking if > 450
	MOVLW .1
	CPFSEQ readH,0
	GOTO check2
	MOVLW .200
	CPFSGT readL,0
	RETURN
	GOTO middle
	
	; checking if < 550
	check2
	MOVLW .2
	CPFSEQ readH,0
	RETURN
	MOVLW .50
	CPFSLT readL,0
	RETURN
	
	; threshold for centre is 450< centre <550
	middle
	CLRF returnFlag
	
	RETURN

	
    MAIN
	CALL INIT_OSC
	CALL INIT_PORTS
	CALL INIT_TMR0
	CALL INIT_EUSART
	
	BCF INTCON2,INTEDG1,0 ; falling edge int1
	BCF RCON,IPEN,0 ; no priorities so everything is high priority
	BSF INTCON, 7,0; enable global interrupts

	GOTO MANUAL_JAVA_LOOP
	
    MANUAL_JOYSTICK_LOOP
        BSF ADCON0,1,0
        SMALL_LOOP
	BTFSC ADCON0,1,0
	GOTO SMALL_LOOP
        CALL READ_VALUE
	CALL CHECK_CENTRE
	
	BTFSS returnFlag,0,0
	CALL CHECK_LEFT
	
	BTFSS returnFlag,0,0
	CALL CHECK_RIGHT
	
	;BSF LATC,1,0
	BTFSC returnFlag,0,0
	GOTO MANUAL_JOYSTICK_LOOP
	CLRF timeNoteL,0
	CLRF timeNoteH,0
	CALL CONVERT_POS_TIME
	CALL MOVE_SERVO_X
	;BCF LATC,1,0
	GOTO MANUAL_JOYSTICK_LOOP
	
	
    	
    MANUAL_JAVA_LOOP
	
	BSF LATD,0,0
	WAIT_RX
	    BTFSS PIR1, RCIF, 0
	    GOTO WAIT_RX
	
	
	BTFSC RCSTA,OERR,0 
	CALL OVERRUN
	
	MOVFF RCREG,readL ; contains the letter sent by the java interface
	;MOVFF readL,
	BSF LATC,1,0
	
	
	
	CLRF timeNoteL,0
	CLRF timeNoteH,0
	CALL CONVERT_Letter_TIME
	
	CALL MOVE_SERVO_X
	
	
	GOTO MANUAL_JAVA_LOOP
	
    OVERRUN
	BCF RCSTA,CREN,0
	BSF CREN,0
	BSF LATD,5,0
	RETURN

	
	
	
    CONVERT_POS_TIME
	MOVLW .0
	SUBWF position,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_C
	
	MOVLW .1
	SUBWF position,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_D
	
	MOVLW .2
	SUBWF position,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_E
	
	MOVLW .3
	SUBWF position,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_F
	
	MOVLW .4
	SUBWF position,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_G
	
	MOVLW .5
	SUBWF position,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_A
	
	MOVLW .6
	SUBWF position,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_B
	
	MOVLW .7
	SUBWF position,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_C2
	RETURN
	
    CONVERT_Letter_TIME
	MOVLW 'C'
	SUBWF readL,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_C
	
	MOVLW 'D'
	SUBWF readL,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_D
	
	MOVLW 'E'
	SUBWF readL,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_E
	
	MOVLW 'F'
	SUBWF readL,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_F
	
	MOVLW 'G'
	SUBWF readL,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_G
	
	MOVLW 'A'
	SUBWF readL,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_A
	
	MOVLW 'B'
	SUBWF readL,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_B
	
	MOVLW 'c'
	SUBWF readL,0
	BTFSC STATUS,Z,0
	CALL SET_NOTE_C2
	RETURN
END
    